<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 PUBLIC "" ".//reference.RFC.2119.xml">
]>
<!-- WK: Set category, IPR, docName -->
<rfc category="info" docName="draft-wkumari-dnsop-cheese-shop-01"
     ipr="trust200902">
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

  <?rfc toc="yes" ?>

  <?rfc symrefs="yes" ?>

  <?rfc sortrefs="yes"?>

  <?rfc iprnotified="no" ?>

  <?rfc strict="yes"?>

  <?rfc compact="yes" ?>

  <front>
    <!-- WK: Set long title. -->

    <title abbrev="If I've told you once...">Believing NSEC records in the DNS
    root.</title>

    <author fullname="Warren Kumari" initials="W." surname="Kumari">
      <organization>Google</organization>

      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>

          <city>Mountain View, CA</city>

          <code>94043</code>

          <country>US</country>
        </postal>

        <email>warren@kumari.net</email>
      </address>
    </author>

    <author fullname="Geoff Huston" initials="G." surname="Huston">
      <organization>APNIC</organization>

      <address>
        <postal>
          <street>6 Cordelia St</street>

          <city>South Brisbane QLD</city>

          <code>4001</code>

          <country>AUS</country>
        </postal>

        <email>gih@apnic.net</email>
      </address>
    </author>

    <date day="24" month="February" year="2016"/>

    <abstract>
      <t>This document describes a method to generate negative answers from
      NSEC records for the special case of the DNS root. This improves
      performance; the resolver can answer immediatly, and does not need to
      query the root. It also cuts down on the so-called "junk" queries. </t>

      <t>[ Ed note: Text inside square brackets ([]) is additional background
      information, answers to frequently asked questions, general musings,
      etc. They will be removed before publication.]</t>

      <t>[ This document is being collaborated on in Github at:
      https://github.com/wkumari/draft-wkumari-dnsop-cheese-shop. The most
      recent version of the document, open issues, etc should all be available
      here. The authors (gratefully) accept pull requests ]</t>
    </abstract>
  </front>

  <middle>
    <section title="Background">
      <t>[ This section may be removed before publication... but I'd prefer
      not, it provides useful context ]</t>

      <t>If a DNS resolver queries a root zone authoritative name
        server with the EDNS0 DNSSEC OK option set, for a name that
        does not exist in the root zone, it gets back an NXDOMAIN
        response and an NSEC record, which "proves" that the name does
        not exist. NSEC proves this by providing names (and signatures)
        for the names which do exist on either side of the queried
        name. For example, if a nameserver queries for .belkin, it will
        get back an NXDOMAIN, and an NSEC record showing that nothing
        exists between (currently) .beer and .bentley [Ed note: There
        *probably* should be something between a beer and a bentley. :-P
        ]. This means that, if the nameserver subsequently (during the
        TTL of the NSEC record) gets a query for .beeswax
        (alphabetically between beer and bentley) it need not attempt
        to resolve this - it has already been given proof that the name
        does not exist. </t>

      <t>The title of this draft comes from a famous Monty Python skit - "The
      Cheese Shop". There are some useful parallels between this problem and
      the skit - watching the skit is encouraged to understand the problem -
      https://www.youtube.com/watch?v=cWDdd5KKhts</t>
    </section>

    <section title="Believing NSEC records.">
      <t>This is a simply a refinement of <xref
      target="I-D.fujiwara-dnsop-nsec-aggressiveuse"/>, for a limited use case
      (the root). Full credit to the authors of the aforementioned draft, and
      this draft does not replace that draft, nor remove the need for the
      broader consideration of the use of NSEC records as described in <xref
      target="I-D.fujiwara-dnsop-nsec-aggressiveuse"/>.</t>

      <t>The scope of this document is limited to the special case of
      recursive DNSSEC validating resolvers querying the root zone. This is because
      the root zone has some well known properties which make it a special
      case - we know it is DNSSEC signed, and uses NSEC, the majority of the
      queries are "junk" queries, the rate of change is relatively slow, and
      there are no odd corner cases such as wildcards. See Section 3 for more
      discussion.</t>

      <t>If the (DNSSEC validated) answer to a query to a root server is an
      NXDOMAIN then the resolver SHOULD cache the NSEC record provided in the
      response. The resolver SHOULD NOT send further queries for names within
      the range of the NSEC record for the lifetime of the cached NSEC TTL.
      Instead, the resolver SHOULD answer these queries directly with NXDOMAIN
      (and NSEC records if so signalled by EDNS). They SHOULD set the AA bit
      and AD bits.</t>

      <section title="Requirements notation">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119"/>.</t>
      </section>
    </section>

    <section title="Generating negatives responses from NSEC">
      <t>[ This section is mainly for discussion, and is more informal. It
      should be deleted before publication. ] </t>

      <t>Section 4.5 of <xref target="RFC4035"/> says:</t>

      <t>"In theory, a resolver could use wildcards or NSEC RRs to generate
      positive and negative responses (respectively) until the TTL or
      signatures on the records in question expire. However, it seems prudent
      for resolvers to avoid blocking new authoritative data or synthesizing
      new data on their own. Resolvers that follow this recommendation will
      have a more consistent view of the namespace."</t>

      <t>and "The reason for these recommendations is that, between the
      initial query and the expiration of the data from the cache, the
      authoritative data might have been changed (for example, via dynamic
      update)."</t>

      <t>So, if a resolver generates negative answers from an NSEC record, it
      will not send any queries for names within that NSEC range (for the
      TTL). If a new name is added to the zone during this interval the
      resolver will not know this. </t>

      <t>For the limited use case of this document (the DNS root) we believe
      that this is an acceptable trade off - the (current) TTL of the
      "negative cache" (in the SOA) is the same as the NSEC TTL (1 day). This
      means that, for a new TLD to begin resolving everywhere will require a
      minimum of a day - and this is true whether or not this is implemented
      (if someone had queried for the exact name, there would be a negatively
      cached answer, this simply expands the range of negative caches). </t>
    </section>

    <section title="IANA Considerations">
      <t>This document contains no IANA considerations.</t>

      <t>[ We MAY want to add something about setting the NSEC TTL
      appropriately?! ]</t>
    </section>

    <section anchor="security" title="Security Considerations">
     <t>The impact of resolver caching is that the resolver will not re-query an
        name server for a cached response until the TTL of the cached response
        expires. This may lead to cases where the resolver responds with
        outdated information for a period of time for subsequent queries for the
        name name.</t>
  
  `     <t>This draft extends the scope of this vulnerability to include
        queries for all names that fall within the NSEC-defined range.
        </t>
    </section>

    <section title="Acknowledgements">
      <t>The authors wish to thank some folk, including Stephane Bortzmeyer,
      Bob Harold, Paul Vixie. </t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include='reference.RFC.2119'?>
    </references>

    <references title="Informative References">
      <?rfc include='reference.I-D.fujiwara-dnsop-nsec-aggressiveuse.xml'?>

      <?rfc include='reference.RFC.4035'?>
    </references>

    <section title="Changes / Author Notes.">
      <t>[RFC Editor: Please remove this section before publication ]</t>

      <t>From -00 to -01.</t>

      <t><list style="symbols">
          <t>Fairly significant rewrite - no substantive changes, only
          additional information, explaination and readability.</t>
        </list></t>
    </section>
  </back>
</rfc>
